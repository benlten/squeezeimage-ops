name: Test Suite Trigger

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - admin
          - performance

  # Scheduled runs (daily at 6 AM UTC)
  schedule:
    - cron: '0 6 * * *'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'synthetics/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd synthetics
        npm ci
    
    - name: Install Playwright browsers
      run: |
        cd synthetics
        npx playwright install chromium
    
    - name: Run smoke tests
      if: ${{ github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      env:
        BASE_URL: https://www.squeezeimage.com
        PW_ASSERT_TEXT: "Smart Image Compression"
      run: |
        cd synthetics
        npx playwright test e2e/smoke.spec.js --reporter=html
    
    - name: Run admin tests
      if: ${{ github.event.inputs.test_suite == 'admin' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      env:
        BASE_URL: https://www.squeezeimage.com
        DEMO_EMAIL: ${{ secrets.DEMO_EMAIL }}
        DEMO_PASSWORD: ${{ secrets.DEMO_PASSWORD }}
      run: |
        cd synthetics
        npx playwright test e2e/admin-tests.spec.js --reporter=html
    
    - name: Run performance tests (Lighthouse)
      if: ${{ github.event.inputs.test_suite == 'performance' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      run: |
        cd synthetics
        npm run lighthouse || echo "Lighthouse script needs to be implemented"
    
    - name: Generate test metrics for dashboard
      if: always()
      run: |
        cd synthetics
        node scripts/test-reporter.js
        
        # Also create a simple JSON summary for the droplet
        cat > test-summary.json << EOF
        {
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "site": "squeezeimage.com",
          "status": "${{ job.status }}",
          "run_number": "${{ github.run_number }}",
          "test_suite": "${{ github.event.inputs.test_suite || 'all' }}",
          "workflow_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }
        EOF
    
    - name: Upload test results and metrics
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          synthetics/playwright-report/
          synthetics/test-summary.json
          synthetics/targets/test-results.prom
        retention-days: 7
    
    - name: Create test summary
      if: always()
      run: |
        echo "## ðŸ§ª SqueezeImage.com Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Site tested:** https://www.squeezeimage.com" >> $GITHUB_STEP_SUMMARY
        echo "- **Test run:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Test suite:** ${{ github.event.inputs.test_suite || 'all' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Check the uploaded artifacts for detailed Playwright test reports!" >> $GITHUB_STEP_SUMMARY