name: Test Suite Trigger

on:
  # Trigger via webhook from app deployments
  repository_dispatch:
    types: [app-deployed, test-request]
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      test_env:
        description: 'Environment to test'
        required: false
        default: 'prod'
        type: choice
        options:
          - prod
          - staging
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - admin
          - performance

  # Scheduled runs (daily at 6 AM UTC)
  schedule:
    - cron: '0 6 * * *'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'synthetics/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd synthetics
        npm ci
    
    - name: Install Playwright browsers
      run: |
        cd synthetics
        npx playwright install chromium
    
    - name: Run smoke tests
      if: ${{ github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      env:
        BASE_URL: https://www.squeezeimage.com
        PW_ASSERT_TEXT: "Smart Image Compression"
      run: |
        cd synthetics
        npx playwright test e2e/smoke.spec.js --reporter=html
    
    - name: Run admin tests
      if: ${{ github.event.inputs.test_suite == 'admin' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      env:
        BASE_URL: https://www.squeezeimage.com
        DEMO_EMAIL: ${{ secrets.DEMO_EMAIL }}
        DEMO_PASSWORD: ${{ secrets.DEMO_PASSWORD }}
      run: |
        cd synthetics
        npx playwright test e2e/admin-tests.spec.js --reporter=html
    
    - name: Run performance tests (Lighthouse)
      if: ${{ github.event.inputs.test_suite == 'performance' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == '' }}
      run: |
        cd synthetics
        npm run lighthouse || echo "Lighthouse script needs to be implemented"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.run_number }}
        path: synthetics/playwright-report/
        retention-days: 7
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "ğŸš¨ Tests failed for squeezeimage.com"
        echo "Check the artifacts for detailed results"
        echo "Trigger source: ${{ github.event_name }}"
        
    - name: Post results to droplet
      if: always()
      env:
        SSH_KEY: ${{ secrets.SQUEEZE_SECRET }}
      run: |
        # Create SSH key
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Post test results to droplet
        TEST_STATUS="${{ job.status }}"
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no squeezeadmin@137.184.1.154 \
          "echo '[$TIMESTAMP] Test run: $TEST_STATUS (trigger: ${{ github.event_name }})' >> ~/test-results.log"